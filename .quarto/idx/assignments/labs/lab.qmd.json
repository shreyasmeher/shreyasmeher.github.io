{"title":"EPPS 6302: Lab Assignments","markdown":{"yaml":{"title":"EPPS 6302: Lab Assignments","author":"Shreyas Meher","format":"html","editor":"visual"},"headingText":"Basic Commands","containsRefs":false,"markdown":"\n\n\n## Create object using the assignment operator (\\<-, =)\n\n```{r}\nx <- c(1,3,2,5)\nx\nx = c(1,6,2)\nx\ny = c(1,4,3)\n```\n\n## Using function\n\n```{r}\nlength(x)  # What does length() do?\nlength(y)\n```\n\n## Using +, -, \\*, /,\\^ operators\n\n```{r}\nx+y\nls() # List objects in the environment\nrm(x,y) # Remove objects\nls()\nrm(list=ls()) # Danger! What does this do?  Not recommended!\n\n```\n\n## Matrix operations\n\n```{r}\nx=matrix(data=c(1,2,3,4), nrow=2, ncol=2) # Create a 2x2 matrix object\nx\nx=matrix(c(1,2,3,4),2,2)\nmatrix(c(1,2,3,4),2,2,byrow=F) # What about byrow=F?\n\nsqrt(x) # What does x look like?\n\nx^2\n\nx=rnorm(50) # Generate a vector of 50 numbers using the rnorm() function\n\ny=x+rnorm(50,mean=50,sd=.1) # What does rnorm(50,mean=50,sd=.1) generate?\n\ncor(x,y) # Correlation of x and y\nset.seed(1303) # Set the seed for Random Number Generator (RNG) to generate values that are reproducible.\nrnorm(50)\nset.seed(5) # Try different seeds?\ny=rnorm(100)\n```\n\n## Simple descriptive statistics\n\n```{r}\nmean(y)\nvar(y)\nsqrt(var(y))\nsd(y)\n```\n\n## Graphics using R Graphics (without packages)\n\n```{r}\n\n\nx=rnorm(100)\ny=rnorm(100)\nplot(x,y, pch=20, col = \"purple\") # Scatterplot for two numeric variables by default\nplot(x,y, pch=20, col = \"purple\",xlab=\"this is the x-axis\",ylab=\"this is the y-axis\",main=\"Plot of X vs Y\") # Add labels\npdf(\"Figure01.pdf\") # Save as pdf, add a path or it will be stored on the project directory\nplot(x,y,pch=20, col=\"skyblue\") # Try different colors?\ndev.off() # Close the file using the dev.off function\nx=seq(1,10) # Same as x=c(1:10)\nx\nx=1:10\nx\nx=seq(-pi,pi,length=50)\ny=x\n\n```\n# R Programmng Basic Commands\n\n(Adapted from ISLR Chapter 3 Lab: Introduction to R)\n\n## Indexing Data using \\[\\]\n\n```{r}\nA=matrix(1:16,4,4)\nA\nA[2,3]\nA[c(1,3),c(2,4)]\nA[1:3,2:4]\nA[1:2,]\nA[,1:2]\nA[1,]\nA[-c(1,3),]\nA[-c(1,3),-c(1,3,4)]\ndim(A)\n```\n\n## Loading Data from GitHub\n\n```{r}\nAuto=read.table(\"https://raw.githubusercontent.com/karlho/knowledgemining/gh-pages/data/Auto.data\")\n# fix(Auto) # Starting the X11 R data editor\nAuto=read.table(\"https://raw.githubusercontent.com/karlho/knowledgemining/gh-pages/data/Auto.data\",header=T,na.strings=\"?\")\n# fix(Auto)\nAuto=read.csv(\"https://raw.githubusercontent.com/karlho/knowledgemining/gh-pages/data/Auto.csv\",header=T,na.strings=\"?\")\n# fix(Auto)\ndim(Auto)\nAuto[1:4,]\nAuto=na.omit(Auto)\ndim(Auto)\nnames(Auto)\n```\n\n## Load data from ISLR website\n\n```{r Loaddata_from_web}\nAuto=read.table(\"https://www.statlearning.com/s/Auto.data\",header=T,na.strings=\"?\")\ndim(Auto)\n```\n\n## Additional Graphical and Numerical Summaries\n\n```{r}\n# plot(cylinders, mpg)\nplot(Auto$cylinders, Auto$mpg)\nattach(Auto)\nplot(cylinders, mpg)\ncylinders=as.factor(cylinders)\nplot(cylinders, mpg)\nplot(cylinders, mpg, col=\"red\")\nplot(cylinders, mpg, col=\"red\", varwidth=T)\nplot(cylinders, mpg, col=\"red\", varwidth=T,horizontal=T)\nplot(cylinders, mpg, col=\"red\", varwidth=T, xlab=\"cylinders\", ylab=\"MPG\")\nhist(mpg)\nhist(mpg,col=2)\nhist(mpg,col=2,breaks=15)\n#pairs(Auto)\npairs(~ mpg + displacement + horsepower + weight + acceleration, Auto)\nplot(horsepower,mpg)\n# identify(horsepower,mpg,name) # Interactive: point and click the dot to identify cases\nsummary(Auto)\nsummary(mpg)\n```\n\n## Linear Regression\n\n```{r}\nptbu=c(\"MASS\",\"ISLR\")\ninstall.packages(ptbu, repos='http://cran.us.r-project.org')\nlapply(ptbu, require, character.only = TRUE)\nlibrary(MASS)\nlibrary(ISLR)\n\n# Simple Linear Regression\n\n# fix(Boston)\nnames(Boston)\n# lm.fit=lm(medv~lstat)\nattach(Boston)\nlm.fit=lm(medv~lstat,data=Boston)\nattach(Boston)\nlm.fit=lm(medv~lstat)\nlm.fit\nsummary(lm.fit)\nnames(lm.fit)\ncoef(lm.fit)\nconfint(lm.fit)\npredict(lm.fit,data.frame(lstat=(c(5,10,15))), interval=\"confidence\")\npredict(lm.fit,data.frame(lstat=(c(5,10,15))), interval=\"prediction\")\n# What is the differnce between \"conference\" and \"prediction\" difference?\n\nplot(lstat,medv)\nabline(lm.fit)\nabline(lm.fit,lwd=3)\nabline(lm.fit,lwd=3,col=\"red\")\nplot(lstat,medv,col=\"red\")\nplot(lstat,medv,pch=16)\nplot(lstat,medv,pch=\"+\")\nplot(1:20,1:20,pch=1:20)\npar(mfrow=c(2,2))\nplot(lm.fit)\nplot(predict(lm.fit), residuals(lm.fit))\nplot(predict(lm.fit), rstudent(lm.fit))\nplot(hatvalues(lm.fit))\nwhich.max(hatvalues(lm.fit))\n```\n\n## Multiple Linear Regression\n\n```{r}\nlm.fit=lm(medv~lstat+age,data=Boston)\nsummary(lm.fit)\nlm.fit=lm(medv~.,data=Boston)\nsummary(lm.fit)\nlibrary(car)\nvif(lm.fit)\nlm.fit1=lm(medv~.-age,data=Boston)\nsummary(lm.fit1)\nlm.fit1=update(lm.fit, ~.-age)\n```\n\n## Non-linear Transformations of the Predictors\n\n```{r}\nlm.fit2=lm(medv~lstat+I(lstat^2))\nsummary(lm.fit2)\nlm.fit=lm(medv~lstat)\nanova(lm.fit,lm.fit2)\npar(mfrow=c(2,2))\nplot(lm.fit2)\nlm.fit5=lm(medv~poly(lstat,5))\nsummary(lm.fit5)\nsummary(lm(medv~log(rm),data=Boston))\n```\n\n## Qualitative Predictors\n\n```{r}\n# fix(Carseats)\nnames(Carseats)\nlm.fit=lm(Sales~.+Income:Advertising+Price:Age,data=Carseats)\nsummary(lm.fit)\nattach(Carseats)\ncontrasts(ShelveLoc)\n```\n\n## Interaction Terms (including interaction and single effects)\n\n```{r}\nsummary(lm(medv~lstat*age,data=Boston))\n```\n\n# R Programming (EDA)\n\n(Adapted from Stackoverflow examples) (Objectives: Use plotly, reshape packages, interactive visualization)\n\n```{r message=FALSE, warning=FALSE}\nlibrary(tidyverse)\nlibrary(plotly)\ndata(iris)\nattach(iris)\n# Generate plot on three quantitative variables\niris_plot <- plot_ly(iris,\n                     x = Sepal.Length,\n                     y = Sepal.Width,\n                     z = Petal.Length,\n                     type = \"scatter3d\",\n                     mode = \"markers\",\n                     size = 0.02)\niris_plot\n# Regression object\n\npetal_lm <- lm(Petal.Length ~ 0 + Sepal.Length + Sepal.Width,\n               data = iris)\nlibrary(reshape2)\n\n#load data\n\npetal_lm <- lm(Petal.Length ~ 0 + Sepal.Length + Sepal.Width,data = iris)\n\n# Setting resolution parameter\ngraph_reso <- 0.05\n\n#Setup Axis\naxis_x <- seq(min(iris$Sepal.Length), max(iris$Sepal.Length), by = graph_reso)\naxis_y <- seq(min(iris$Sepal.Width), max(iris$Sepal.Width), by = graph_reso)\n\n# Regression surface\n# Rearranging data for plotting\npetal_lm_surface <- expand.grid(Sepal.Length = axis_x,Sepal.Width = axis_y,KEEP.OUT.ATTRS = F)\npetal_lm_surface$Petal.Length <- predict.lm(petal_lm, newdata = petal_lm_surface)\npetal_lm_surface <- acast(petal_lm_surface, Sepal.Width ~ Sepal.Length, value.var = \"Petal.Length\")\nhcolors=c(\"orange\",\"blue\",\"green\")[iris$Species]\niris_plot <- plot_ly(iris,\n                     x = ~Sepal.Length,\n                     y = ~Sepal.Width,\n                     z = ~Petal.Length,\n                     text = Species,\n                     type = \"scatter3d\",\n                     mode = \"markers\",\n                     marker = list(color = hcolors),\n                     size=0.02)\n# Add surface\niris_plot <- add_trace(p = iris_plot,\n                       z = petal_lm_surface,\n                       x = axis_x,\n                       y = axis_y,\n                       type = \"surface\",mode = \"markers\",\n                       marker = list(color = hcolors))\niris_plot\n```\n\n# Regression object\n\n```{r}\npetal_lm <- lm(Petal.Length ~ 0 + Sepal.Length + Sepal.Width, \n               data = iris)\n```","srcMarkdownNoYaml":"\n\n# Basic Commands\n\n## Create object using the assignment operator (\\<-, =)\n\n```{r}\nx <- c(1,3,2,5)\nx\nx = c(1,6,2)\nx\ny = c(1,4,3)\n```\n\n## Using function\n\n```{r}\nlength(x)  # What does length() do?\nlength(y)\n```\n\n## Using +, -, \\*, /,\\^ operators\n\n```{r}\nx+y\nls() # List objects in the environment\nrm(x,y) # Remove objects\nls()\nrm(list=ls()) # Danger! What does this do?  Not recommended!\n\n```\n\n## Matrix operations\n\n```{r}\nx=matrix(data=c(1,2,3,4), nrow=2, ncol=2) # Create a 2x2 matrix object\nx\nx=matrix(c(1,2,3,4),2,2)\nmatrix(c(1,2,3,4),2,2,byrow=F) # What about byrow=F?\n\nsqrt(x) # What does x look like?\n\nx^2\n\nx=rnorm(50) # Generate a vector of 50 numbers using the rnorm() function\n\ny=x+rnorm(50,mean=50,sd=.1) # What does rnorm(50,mean=50,sd=.1) generate?\n\ncor(x,y) # Correlation of x and y\nset.seed(1303) # Set the seed for Random Number Generator (RNG) to generate values that are reproducible.\nrnorm(50)\nset.seed(5) # Try different seeds?\ny=rnorm(100)\n```\n\n## Simple descriptive statistics\n\n```{r}\nmean(y)\nvar(y)\nsqrt(var(y))\nsd(y)\n```\n\n## Graphics using R Graphics (without packages)\n\n```{r}\n\n\nx=rnorm(100)\ny=rnorm(100)\nplot(x,y, pch=20, col = \"purple\") # Scatterplot for two numeric variables by default\nplot(x,y, pch=20, col = \"purple\",xlab=\"this is the x-axis\",ylab=\"this is the y-axis\",main=\"Plot of X vs Y\") # Add labels\npdf(\"Figure01.pdf\") # Save as pdf, add a path or it will be stored on the project directory\nplot(x,y,pch=20, col=\"skyblue\") # Try different colors?\ndev.off() # Close the file using the dev.off function\nx=seq(1,10) # Same as x=c(1:10)\nx\nx=1:10\nx\nx=seq(-pi,pi,length=50)\ny=x\n\n```\n# R Programmng Basic Commands\n\n(Adapted from ISLR Chapter 3 Lab: Introduction to R)\n\n## Indexing Data using \\[\\]\n\n```{r}\nA=matrix(1:16,4,4)\nA\nA[2,3]\nA[c(1,3),c(2,4)]\nA[1:3,2:4]\nA[1:2,]\nA[,1:2]\nA[1,]\nA[-c(1,3),]\nA[-c(1,3),-c(1,3,4)]\ndim(A)\n```\n\n## Loading Data from GitHub\n\n```{r}\nAuto=read.table(\"https://raw.githubusercontent.com/karlho/knowledgemining/gh-pages/data/Auto.data\")\n# fix(Auto) # Starting the X11 R data editor\nAuto=read.table(\"https://raw.githubusercontent.com/karlho/knowledgemining/gh-pages/data/Auto.data\",header=T,na.strings=\"?\")\n# fix(Auto)\nAuto=read.csv(\"https://raw.githubusercontent.com/karlho/knowledgemining/gh-pages/data/Auto.csv\",header=T,na.strings=\"?\")\n# fix(Auto)\ndim(Auto)\nAuto[1:4,]\nAuto=na.omit(Auto)\ndim(Auto)\nnames(Auto)\n```\n\n## Load data from ISLR website\n\n```{r Loaddata_from_web}\nAuto=read.table(\"https://www.statlearning.com/s/Auto.data\",header=T,na.strings=\"?\")\ndim(Auto)\n```\n\n## Additional Graphical and Numerical Summaries\n\n```{r}\n# plot(cylinders, mpg)\nplot(Auto$cylinders, Auto$mpg)\nattach(Auto)\nplot(cylinders, mpg)\ncylinders=as.factor(cylinders)\nplot(cylinders, mpg)\nplot(cylinders, mpg, col=\"red\")\nplot(cylinders, mpg, col=\"red\", varwidth=T)\nplot(cylinders, mpg, col=\"red\", varwidth=T,horizontal=T)\nplot(cylinders, mpg, col=\"red\", varwidth=T, xlab=\"cylinders\", ylab=\"MPG\")\nhist(mpg)\nhist(mpg,col=2)\nhist(mpg,col=2,breaks=15)\n#pairs(Auto)\npairs(~ mpg + displacement + horsepower + weight + acceleration, Auto)\nplot(horsepower,mpg)\n# identify(horsepower,mpg,name) # Interactive: point and click the dot to identify cases\nsummary(Auto)\nsummary(mpg)\n```\n\n## Linear Regression\n\n```{r}\nptbu=c(\"MASS\",\"ISLR\")\ninstall.packages(ptbu, repos='http://cran.us.r-project.org')\nlapply(ptbu, require, character.only = TRUE)\nlibrary(MASS)\nlibrary(ISLR)\n\n# Simple Linear Regression\n\n# fix(Boston)\nnames(Boston)\n# lm.fit=lm(medv~lstat)\nattach(Boston)\nlm.fit=lm(medv~lstat,data=Boston)\nattach(Boston)\nlm.fit=lm(medv~lstat)\nlm.fit\nsummary(lm.fit)\nnames(lm.fit)\ncoef(lm.fit)\nconfint(lm.fit)\npredict(lm.fit,data.frame(lstat=(c(5,10,15))), interval=\"confidence\")\npredict(lm.fit,data.frame(lstat=(c(5,10,15))), interval=\"prediction\")\n# What is the differnce between \"conference\" and \"prediction\" difference?\n\nplot(lstat,medv)\nabline(lm.fit)\nabline(lm.fit,lwd=3)\nabline(lm.fit,lwd=3,col=\"red\")\nplot(lstat,medv,col=\"red\")\nplot(lstat,medv,pch=16)\nplot(lstat,medv,pch=\"+\")\nplot(1:20,1:20,pch=1:20)\npar(mfrow=c(2,2))\nplot(lm.fit)\nplot(predict(lm.fit), residuals(lm.fit))\nplot(predict(lm.fit), rstudent(lm.fit))\nplot(hatvalues(lm.fit))\nwhich.max(hatvalues(lm.fit))\n```\n\n## Multiple Linear Regression\n\n```{r}\nlm.fit=lm(medv~lstat+age,data=Boston)\nsummary(lm.fit)\nlm.fit=lm(medv~.,data=Boston)\nsummary(lm.fit)\nlibrary(car)\nvif(lm.fit)\nlm.fit1=lm(medv~.-age,data=Boston)\nsummary(lm.fit1)\nlm.fit1=update(lm.fit, ~.-age)\n```\n\n## Non-linear Transformations of the Predictors\n\n```{r}\nlm.fit2=lm(medv~lstat+I(lstat^2))\nsummary(lm.fit2)\nlm.fit=lm(medv~lstat)\nanova(lm.fit,lm.fit2)\npar(mfrow=c(2,2))\nplot(lm.fit2)\nlm.fit5=lm(medv~poly(lstat,5))\nsummary(lm.fit5)\nsummary(lm(medv~log(rm),data=Boston))\n```\n\n## Qualitative Predictors\n\n```{r}\n# fix(Carseats)\nnames(Carseats)\nlm.fit=lm(Sales~.+Income:Advertising+Price:Age,data=Carseats)\nsummary(lm.fit)\nattach(Carseats)\ncontrasts(ShelveLoc)\n```\n\n## Interaction Terms (including interaction and single effects)\n\n```{r}\nsummary(lm(medv~lstat*age,data=Boston))\n```\n\n# R Programming (EDA)\n\n(Adapted from Stackoverflow examples) (Objectives: Use plotly, reshape packages, interactive visualization)\n\n```{r message=FALSE, warning=FALSE}\nlibrary(tidyverse)\nlibrary(plotly)\ndata(iris)\nattach(iris)\n# Generate plot on three quantitative variables\niris_plot <- plot_ly(iris,\n                     x = Sepal.Length,\n                     y = Sepal.Width,\n                     z = Petal.Length,\n                     type = \"scatter3d\",\n                     mode = \"markers\",\n                     size = 0.02)\niris_plot\n# Regression object\n\npetal_lm <- lm(Petal.Length ~ 0 + Sepal.Length + Sepal.Width,\n               data = iris)\nlibrary(reshape2)\n\n#load data\n\npetal_lm <- lm(Petal.Length ~ 0 + Sepal.Length + Sepal.Width,data = iris)\n\n# Setting resolution parameter\ngraph_reso <- 0.05\n\n#Setup Axis\naxis_x <- seq(min(iris$Sepal.Length), max(iris$Sepal.Length), by = graph_reso)\naxis_y <- seq(min(iris$Sepal.Width), max(iris$Sepal.Width), by = graph_reso)\n\n# Regression surface\n# Rearranging data for plotting\npetal_lm_surface <- expand.grid(Sepal.Length = axis_x,Sepal.Width = axis_y,KEEP.OUT.ATTRS = F)\npetal_lm_surface$Petal.Length <- predict.lm(petal_lm, newdata = petal_lm_surface)\npetal_lm_surface <- acast(petal_lm_surface, Sepal.Width ~ Sepal.Length, value.var = \"Petal.Length\")\nhcolors=c(\"orange\",\"blue\",\"green\")[iris$Species]\niris_plot <- plot_ly(iris,\n                     x = ~Sepal.Length,\n                     y = ~Sepal.Width,\n                     z = ~Petal.Length,\n                     text = Species,\n                     type = \"scatter3d\",\n                     mode = \"markers\",\n                     marker = list(color = hcolors),\n                     size=0.02)\n# Add surface\niris_plot <- add_trace(p = iris_plot,\n                       z = petal_lm_surface,\n                       x = axis_x,\n                       y = axis_y,\n                       type = \"surface\",mode = \"markers\",\n                       marker = list(color = hcolors))\niris_plot\n```\n\n# Regression object\n\n```{r}\npetal_lm <- lm(Petal.Length ~ 0 + Sepal.Length + Sepal.Width, \n               data = iris)\n```"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"lab.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.57","theme":{"light":["flatly","../../mystyles.scss"],"dark":["darkly","../../custom-dark.scss"]},"title":"EPPS 6302: Lab Assignments","author":"Shreyas Meher","editor":"visual"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}